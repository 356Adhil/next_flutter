{"version":3,"file":"static/js/1011.c05890e8.chunk.js","mappings":"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","sources":["components/project/pages/event/customDomain/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { PageHeader, SubPageHeader } from \"../../../../core/input/heading\";\nimport { RowContainer } from \"../../../../styles/containers/styles\";\nimport { AddButton } from \"../../../../core/list/styles\";\nimport { GetIcon } from \"../../../../../icons\";\nimport { Button, IconButton, TextBoxWithButton } from \"../../../../core/elements\";\nimport { getData } from \"../../../../../backend/api\";\n\nconst Card = styled.div`\n  background: white;\n  border-radius: 0.5rem;\n  padding: 1rem;\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);\n  border: 1px solid #e5e7eb;\n`;\n\nconst FlexContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n  ${(props) => props.justify === \"between\" && \"justify-content: space-between;\"}\n  &.control {\n    display: flex;\n    justify-content: space-between;\n    > .full {\n      width: 100%;\n    }\n  }\n`;\n\nconst StatusBadge = styled.span`\n  &.active {\n    background: #dcfce7;\n    color: #16a34a;\n  }\n  &.pending {\n    background: #fcdcdc;\n    color: #a31816;\n  }\n  padding: 0.25rem 0.75rem;\n  border-radius: 9999px;\n  font-size: 0.875rem;\n`;\n\nconst DomainInfo = styled.div`\n  .h3 {\n    font-size: 1.125rem;\n    font-weight: 500;\n    color: #1f2937;\n  }\n\n  .p {\n    padding: 0;\n    color: #6b7280;\n  }\n`;\n\nconst ConfigurationRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 1rem 0 0.5rem;\n  gap: 10px;\n  > span:first-child {\n    color: #6b7280;\n  }\n  > span:first-child::after {\n    content: \":\";\n  }\n  &::after {\n    content: \"â€¢\";\n    color: #6b7280;\n  }\n  &:last-child::after {\n    content: \"\";\n  }\n  span:last-child {\n    font-weight: 500;\n  }\n`;\n\nconst CopyWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n\n  svg {\n    color: #9ca3af;\n    cursor: pointer;\n    font-weight: 500;\n    &:hover {\n      color: #6b7280;\n    }\n  }\n`;\n\nexport default function CustomDomain(props) {\n  const [isEditing, setIsEditing] = useState(false);\n  const [subdomain, setSubdomain] = useState(\"\");\n  const [subdomainItems, setSubdomainItems] = useState([]);\n  const [isUpdated, setIsUpdated] = useState(false);\n  const [editingValue, setEditingValue] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const route = props.id;\n  const eventId = props?.openData?.data?._id;\n\n  const cleanSubdomainInput = (value) => {\n    return value\n      .toLowerCase()\n      .replace(/[^a-z0-9-]/g, \"\") // Remove all characters that aren't lowercase letters, numbers, or hyphens\n      .replace(/-+/g, \"-\") // Replace multiple consecutive hyphens with a single hyphen\n      .replace(/^-+|-+$/g, \"\"); // Remove hyphens from start and end\n  };\n\n  const validateSubdomain = (value) => {\n    if (!value) {\n      setError(\"Subdomain cannot be empty\");\n      return { isValid: false, value: \"\" };\n    }\n\n    if (value.length < 1 || value.length > 63) {\n      setError(\"Subdomain must be between 1 and 63 characters\");\n      return { isValid: false, value };\n    }\n\n    // Check if the value starts with a letter/number and ends with a letter/number\n    const firstChar = value.charAt(0);\n    const lastChar = value.charAt(value.length - 1);\n    if (!/[a-z0-9]/.test(firstChar) || !/[a-z0-9]/.test(lastChar)) {\n      setError(\"Subdomain must start and end with a letter or number\");\n      return { isValid: false, value };\n    }\n\n    // Clear error if validation passes\n    setError(\"\");\n    return { isValid: true, value };\n  };\n\n  const handleEditClick = () => {\n    if (isEditing) {\n      // If canceling edit mode, restore the full domain\n      setEditingValue(\"\");\n    } else {\n      // If entering edit mode, remove .eventhex.ai and set for editing\n      const domainParts = subdomain.split(\".eventhex.ai\");\n      setEditingValue(domainParts[0]);\n    }\n    setIsEditing(!isEditing);\n    setError(\"\"); // Clear any errors\n  };\n\n  const handleUpdate = () => {\n    const validation = validateSubdomain(editingValue);\n    // setError(JSON.stringify(validation));\n    if (validation.isValid) {\n      setSubdomain(`${validation.value}.eventhex.ai`);\n      setIsEditing(false);\n      setError(\"\");\n    }\n  };\n\n  useEffect(() => {\n    getData({ event: eventId }, \"whitelisted-Domains\").then((response) => {\n      if (response.status === 200) {\n        const items = response?.data?.response;\n        setSubdomainItems(items);\n        setSubdomain(items[0]?.domain ?? \"your-event.eventhex.ai\");\n      }\n    });\n  }, [eventId, route]);\n\n  return (\n    <RowContainer className={\"data-layout \"}>\n      <PageHeader title={\"Domain Settings\"} line={false} description={\"Manage your event's domain settings and custom domain configuration.\"} />\n\n      <Card>\n        <FlexContainer className=\"control\">\n          <TextBoxWithButton\n            icon={\"globe\"}\n            onClick={handleEditClick}\n            onChange={(value) => {\n              const cleanedValue = cleanSubdomainInput(value);\n\n              setIsUpdated(`${cleanedValue}.eventhex.ai` !== subdomain);\n              setEditingValue(cleanedValue);\n              validateSubdomain(cleanedValue);\n            }}\n            text={isEditing ? \"Cancel\" : \"Edit Subdomain\"}\n            label=\"Subdomain\"\n            value={isEditing ? editingValue : subdomain}\n            placeholder=\"Please add a sub domain!\"\n            footnote={isEditing ? (error?.length > 0 ? error : `${editingValue}.eventhex.ai`) : \"\"}\n            error={!!error}\n            customClass={`full ${isEditing ? \"transparent\" : \"transparent\"}`}\n          />\n          {isEditing && <Button isDisabled={!isUpdated} value=\"Update\" icon={\"save\"} size={16} ClickEvent={handleUpdate} />}\n        </FlexContainer>\n      </Card>\n\n      <FlexContainer justify=\"between\">\n        <SubPageHeader title={\"Custom Domains\"} line={false} description={\"\"} />\n        <AddButton onClick={() => {}}>\n          <GetIcon icon={\"add\"} />\n          <span>Add Domain</span>\n        </AddButton>\n      </FlexContainer>\n      {subdomainItems?.map((item) => (\n        <Card>\n          <FlexContainer justify=\"between\">\n            <FlexContainer>\n              <GetIcon icon={\"link\"} />\n              <DomainInfo>\n                <div className=\"h3\">{item.domain}</div>\n              </DomainInfo>\n            </FlexContainer>\n            {item.verified ? <StatusBadge className=\"active\">Active</StatusBadge> : <StatusBadge className=\"pending\">Pending</StatusBadge>}\n          </FlexContainer>\n\n          <FlexContainer>\n            <ConfigurationRow>\n              <span>CNAME</span>\n              <CopyWrapper>\n                <span>cname.eventhex.ai</span>\n                <IconButton type=\"plain\" icon={\"copy\"} size={16} />\n              </CopyWrapper>\n            </ConfigurationRow>\n          </FlexContainer>\n        </Card>\n      ))}\n      {/* {subdomainItems?.length>0 && (\n        <ListTable\n          // actions={actions}\n          api={`whitelisted-Domains`}\n          itemTitle={{\n            name: \"domain\",\n            type: \"text\",\n            collection: \"\",\n          }}\n          attributes={attributes}\n          parentReference={\"event\"}\n          referenceId={eventId}\n          parents={{ route: props.id, event: eventId }}\n          preFilter={{ route: props.id, event: eventId }}\n          shortName={`Domain`}\n          formMode={`single`}\n          preData={subdomainItems}\n          // showTitle={false}\n          // showFilters={false}\n          showPagination={false}\n          showHeaderRow={false}\n          icon=\"link\"\n          viewMode={\"list\"}\n          name={route}\n          delPrivilege={true}\n          addPrivilege={true}\n          updatePrivilege={true}\n          {...props}\n        ></ListTable>\n      )} */}\n    </RowContainer>\n  );\n}\n"],"names":["Card","styled","div","FlexContainer","props","justify","StatusBadge","span","DomainInfo","ConfigurationRow","CopyWrapper","CustomDomain","_props$openData","_props$openData$data","isEditing","setIsEditing","useState","subdomain","setSubdomain","subdomainItems","setSubdomainItems","isUpdated","setIsUpdated","editingValue","setEditingValue","error","setError","route","id","eventId","openData","data","_id","validateSubdomain","value","isValid","length","firstChar","charAt","lastChar","test","useEffect","getData","event","then","response","status","_response$data","_items$0$domain","_items$","items","domain","_jsxs","RowContainer","className","children","_jsx","PageHeader","title","line","description","TextBoxWithButton","icon","onClick","handleEditClick","domainParts","split","onChange","cleanedValue","toLowerCase","replace","cleanSubdomainInput","text","label","placeholder","footnote","customClass","Button","isDisabled","size","ClickEvent","handleUpdate","validation","SubPageHeader","AddButton","GetIcon","map","item","verified","IconButton","type"],"sourceRoot":""}