{"version":3,"file":"static/js/9504.b47b254a.chunk.js","mappings":"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","sources":["components/core/dashboard/dashbox/index.js","components/core/dashboard/highlitecard/styles.js","components/core/dashboard/highlitecard/index.js","components/core/dashboard/piechart/index.js","components/core/dashboard/linegraph/index.js","components/project/pages/dashboard/index.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const DashBox = styled.div`\n  border: 1px solid #e2e4e9;\n  border-radius: 12px;\n  width: 100%;\n  /* width: calc(${({ width }) => width} - 10px); */\n  min-height: 100px;\n  overflow: auto;\n  box-sizing: border-box;\n  grid-column: span ${({ column }) => column}; \n  &.noborder {\n    border: 0px solid #e2e4e9;\n    border-radius: 0px;\n  }\n\n  &.half {\n    grid-column: span 2; /* 50% width */\n  }\n\n  &.quarter {\n    grid-column: span 1; /* 25% width */\n  }\n\n  &.threequarter {\n    grid-column: span 3; /* 75% width */\n  }\n\n  &.full {\n    grid-column: span 4; /* 100% width */\n  }\n`;\n","import styled from \"styled-components\";\nimport { appTheme } from \"../../../project/brand/project\";\nexport const Titles = styled.div`\n  font-size: 14px;\n  font-weight: bold;\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\nexport const Summary = styled.div`\n  font-size: 12px;\n  color: grey;\n`;\nexport const DashboardSection = styled.div`\n  margin: 30px;\n  display: grid;\n  width: 100%;\n  gap: 10px;\n  grid-template-columns: repeat(auto-fill, 250px);\n  height: auto;\n  align-content: flex-start;\n  @media screen and (max-width: 560px) {\n    grid-template-columns: auto;\n    width: auto;\n  }\n`;\n\nexport const Tile = styled.div`\n  padding: 30px 24px 30px 24px;\n  gap: 12px;\n  border-radius: 16px;\n  border: 1px;\n  border: 1px solid ${appTheme.stroke.soft};\n  display: flex;\n`;\n\nexport const TitleBox = styled.div`\n  margin-top: 0;\n  display: flex;\n  -webkit-box-pack: left;\n  justify-content: baseline;\n  flex-direction: column;\n  gap: 4px;\n`;\nexport const TitleHead = styled.span`\n  font-size: 11px;\n  font-weight: 500;\n  line-height: 12px;\n  letter-spacing: 0.02em;\n  text-align: left;\n  color: ${appTheme.text.soft};\n\n  &.info {\n    color: Blue;\n  }\n`;\n\nexport const Count = styled.div`\n  font-size: 20px;\n  font-weight: bold;\n`;\n\nexport const IconWrapper = styled.div`\n  height: 40px;\n  width: 40px;\n  padding: 10px;\n  gap: 10px;\n  border-radius: 50%;\n  border: 1px;\n  opacity: 0px;\n  border: 1px solid ${appTheme.stroke.soft};\n  display: flex;\n  align-self: center;\n  justify-content: center;\n  color: ${appTheme.primary.base};\n  svg {\n    width: 16.09px;\n    height: 16.09px;\n  }\n`;\nexport const TileContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-template-rows: repeat(1, 1fr);\n  gap: 20px;\n  margin-top:10px;\n`;\n","import React, { useEffect, useState, useMemo, useCallback, memo } from \"react\";\nimport { GetIcon } from \"../../../../icons\";\nimport { ElementContainer, Select } from \"../../elements\";\nimport { Count, IconWrapper, Tile, TileContainer, TitleBox, TitleHead } from \"./styles\";\nimport { getData } from \"../../../../backend/api\";\n// import { SubPageHeader } from \"../../input/heading\";\n\nconst HighlightCards = memo(\n  ({\n    title = \"No Title Found\",\n    description = \"\",\n    dataType = \"API\",\n    filterType = \"JSON\",\n    parents = {},\n    filters = [\n      { id: 1, value: \"January\" },\n      { id: 2, value: \"February\" },\n      { id: 3, value: \"March\" },\n    ],\n    dataItem = \"dashboard\",\n    hideFilter = true,\n  }) => {\n    const [filterItems, setFilterItems] = useState(filters);\n    const [mainData, setMainData] = useState([]);\n    const [filter, setFilter] = useState(\"\");\n    const [dataLoaded, setDataLoaded] = useState(false);\n\n    const fetchData = useCallback(async (api, params) => {\n      try {\n        const response = await getData(params, api);\n        if (response.status === 200){ \n          return response.data; \n        }\n        else {\n          return []\n        }\n\n      } catch (error) {\n        console.error(`Error fetching data from ${api}:`, error);\n        return [];\n      }\n    }, []);\n\n    useEffect(() => {\n      const fetchMainData = async () => {\n        if (dataType === \"API\" && !dataLoaded) {\n          const data = await fetchData(dataItem, filter ? { ...parents, filter } : parents);\n          setMainData(data);\n          setDataLoaded(true);\n        }\n      };\n      fetchMainData();\n    }, [dataItem, dataType, filter, parents, fetchData, dataLoaded]);\n\n    useEffect(() => {\n      const fetchFilterItems = async () => {\n        if (filterType === \"API\" && !dataLoaded) {\n          const data = await fetchData(filters);\n          setFilterItems(data);\n          setDataLoaded(true);\n        }\n      };\n      fetchFilterItems();\n    }, [filters, filterType, fetchData, dataLoaded]);\n\n    const renderedTiles = useMemo(() => {\n      return mainData?.slice(0, 4).map((item, index) => (\n        <Tile key={index}>\n          <IconWrapper>\n            <GetIcon icon={item.icon} />\n          </IconWrapper>\n          <TitleBox>\n            <TitleHead>{item.title}</TitleHead>\n            <Count>{item.count}</Count>\n          </TitleBox>\n        </Tile>\n      ));\n    }, [mainData]);\n\n    const handleFilterSelect = useCallback(\n      (item) => {\n        setFilter(item.id ?? \"\");\n        setDataLoaded(false);\n      },\n      [setFilter, setDataLoaded]\n    );\n\n    return (\n      <ElementContainer className=\"tiles column\">\n        {/* <SubPageHeader line={true} title={title} description={description} /> */}\n        {!hideFilter && <Select label=\"Month\" align=\"right small\" value={filter} selectApi={filterItems} onSelect={handleFilterSelect} />}\n\n        <TileContainer>{renderedTiles}</TileContainer>\n      </ElementContainer>\n    );\n  },\n  (prevProps, nextProps) => {\n    return prevProps.title === nextProps.title && prevProps.description === nextProps.description && prevProps.dataType === nextProps.dataType && prevProps.filterType === nextProps.filterType && JSON.stringify(prevProps.parents) === JSON.stringify(nextProps.parents) && JSON.stringify(prevProps.filters) === JSON.stringify(nextProps.filters) && prevProps.dataItem === nextProps.dataItem && prevProps.hideFilter === nextProps.hideFilter;\n  }\n);\n\nexport default HighlightCards;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport Chart from \"chart.js/auto\";\nimport { ElementContainer, Select } from \"../../elements\";\nimport { Title } from \"../styles\";\nimport { getData } from \"../../../../backend/api\";\n// import DashTable from \"../dashtable\";\nconst colors = [\n  \"#F4C430\", // Golden yellow\n  \"#6E3FF3\", // Royal blue\n  \"#DC143C\", // Crimson red\n  \"#3CB371\", // Medium sea green\n  \"#87CEEB\", // Sky blue\n  \"#FF7F50\", // Coral\n  \"#9370DB\", // Medium purple\n  \"#008080\", // Teal\n  \"#FF69B4\", // Hot pink\n  \"#00CED1\", // Dark turquoise\n  \"#8B008B\", // Dark magenta\n  \"#00FA9A\", // Spring green\n  \"#FF8C00\", // Dark orange\n  \"#1E90FF\", // Dodger blue\n  \"#7B68EE\", // Medium slate blue\n];\nconst PieChart = ({\n  title = \"Target vs Reality\",\n  type = \"pie\", //doughnut\n  cutout = \"70%\",\n  dataType = \"\",\n  filterType = \"JSON\",\n  // filters = [\n  //   { id: 1, value: \"January\" },\n  //   { id: 2, value: \"February\" },\n  //   { id: 3, value: \"March\" },\n  // ],\n  filters = null,\n  columns = [],\n  dataItem = [\n    { label: \"January\", value: 1000 },\n    { label: \"February\", value: 1200 },\n    { label: \"March\", value: 1500 },\n    { label: \"April\", value: 1400 },\n    { label: \"May\", value: 1600 },\n  ],\n}) => {\n  const chartRef = useRef(null);\n  const [filterItems, setFilterItems] = useState(filters);\n  const [mainData, setMainData] = useState(dataItem);\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    if (dataType === \"API\") {\n      const fetchData = async (api) => {\n        try {\n          const response = await getData(filter ? { filter } : {}, api);\n          setMainData(response.data);\n        } catch (error) {\n          console.error(\"Error fetching data from API:\", error);\n        }\n      };\n      fetchData(dataItem);\n    }\n  }, [dataItem, dataType, filter]);\n\n  useEffect(() => {\n    if (filterType === \"API\") {\n      const fetchData = async (api) => {\n        try {\n          const response = await getData({}, api);\n          setFilterItems(response.data);\n        } catch (error) {\n          console.error(\"Error fetching filter items from API:\", error);\n        }\n      };\n      fetchData(filters);\n    }\n  }, [filters, filterType]);\n\n  useEffect(() => {\n    if (!chartRef.current || !Array.isArray(mainData)) return;\n    // const maxValue = Math.max(...mainData.map((item) => item.value));\n    const tempData = [...mainData].sort((a, b) => b.value - a.value);\n\n    const data = {\n      labels: tempData.map((item) => item.label??\"\"),\n      datasets: [\n        {\n          data: tempData.map((item) => item.value??0),\n          fill: true,\n          tension: 1,\n          borderRadius: 0,\n          borderSkipped: true,\n          backgroundColor: tempData.map((key, index) => {\n            return colors[index];\n          }),\n        },\n      ],\n    };\n\n    const ctx = chartRef.current.getContext(\"2d\");\n\n    // Check if there is an existing chart instance\n    if (chartRef.current.chart) {\n      chartRef.current.chart.destroy();\n    }\n\n    chartRef.current.chart = new Chart(ctx, {\n      type,\n      data: {\n        labels: data.labels,\n        datasets: data.datasets,\n      },\n      options: {\n        aspectRatio: 5 / 2, // 3:2 aspect ratio\n        cutout,\n        plugins: {\n          legend: {\n            display: true,\n            position: \"right\",\n            align: \"center\",\n            fullWidth: false,\n            reverse: false,\n            labels: {\n              color: \"black\",\n              font: {\n                size: 12,\n                style: \"normal\",\n              },\n            },\n          },\n        },\n      },\n    });\n  }, [type, cutout, mainData]);\n  return (\n    <ElementContainer className=\"dashitem column\">\n      <Title>\n        <span>{title}</span>\n        {filters && (\n          <Select\n            label=\"Month\"\n            align=\"right small\"\n            value={filter}\n            selectApi={filterItems}\n            onSelect={(item) => {\n              setFilter(item.id ?? null);\n            }}\n          ></Select>\n        )}\n      </Title>\n      <canvas ref={chartRef} />\n      {/* <DashTable plain={true} columns={columns} dataItem={dataItem}></DashTable> */}\n    </ElementContainer>\n  );\n};\n\nexport default PieChart;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport Chart from \"chart.js/auto\";\nimport { ElementContainer } from \"../../elements\";\nimport { Title } from \"../styles\";\n\n// Utility function to generate unique IDs\nconst generateUniqueId = () => {\n  return 'chart-' + Math.random().toString(36).substr(2, 9);\n};\n\nconst LineGraph = ({\n  title = \"Visitor Insights\",\n  dataType = \"JSON\",\n  filterType = \"JSON\",\n  filters = [\n    { id: 1, value: \"January\" },\n    { id: 2, value: \"February\" },\n    { id: 3, value: \"March\" },\n  ],\n  dataItem = [],\n  columns = [{ name: \"click\", label: \"Clicks\", borderColor: \"rgb(9, 75, 150)\" }],\n  label = \"id\",\n  showTitle = true,\n  chartId // Optional prop for external ID control\n}) => {\n  const canvasRef = useRef(null);\n  const chartInstanceRef = useRef(null);\n  const [mainData] = useState(dataItem);\n  // Generate unique ID once when component mounts\n  const [uniqueId] = useState(() => chartId || generateUniqueId());\n\n  useEffect(() => {\n    if (filterType === \"API\") {\n      const fetchData = async (api) => {\n        try {\n          // API fetching logic here\n        } catch (error) {\n          console.error(\"Error fetching filter items from API:\", error);\n        }\n      };\n      fetchData(filters);\n    }\n  }, [filters, filterType]);\n\n  useEffect(() => {\n    const createChart = () => {\n      if (!canvasRef.current || !Array.isArray(mainData)) return;\n\n      const ctx = canvasRef.current.getContext(\"2d\");\n      if (!ctx) return;\n\n      // Destroy existing chart if it exists\n      if (chartInstanceRef.current) {\n        chartInstanceRef.current.destroy();\n      }\n\n      const data = {\n        labels: mainData.map((item) => item[label]),\n        datasets: columns.map((column) => {\n          const gradient = ctx.createLinearGradient(0, 0, 0, 400);\n\n          const rgbMatch = column.borderColor.match(/\\d+/g);\n          if (rgbMatch && rgbMatch.length === 3) {\n            const [r, g, b] = rgbMatch;\n            gradient.addColorStop(0, `rgba(${r}, ${g}, ${b}, 0.1)`);\n            gradient.addColorStop(1, `rgba(${r}, ${g}, ${b}, 0)`);\n          } else {\n            gradient.addColorStop(0, \"rgba(185, 174, 52, 0)\");\n            gradient.addColorStop(1, \"rgba(185, 174, 52, 0)\");\n          }\n\n          return {\n            name: column.name,\n            label: column.label,\n            data: mainData.map((item) => item[column.name]),\n            fill: true,\n            backgroundColor: gradient,\n            borderColor: column.borderColor,\n            tension: 0.1,\n            cubicInterpolationMode: \"linear\",\n            pointRadius: 0,\n            pointHoverRadius: 8,\n            pointHoverBackgroundColor: column.borderColor,\n            pointHoverBorderColor: \"white\",\n            pointHoverBorderWidth: 3,\n          };\n        }),\n      };\n\n      chartInstanceRef.current = new Chart(ctx, {\n        id: uniqueId, // Add unique ID to chart configuration\n        type: \"line\",\n        data: {\n          labels: data.labels,\n          datasets: data.datasets,\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          interaction: {\n            mode: \"index\",\n            intersect: false,\n          },\n          hover: {\n            mode: \"index\",\n            intersect: false,\n          },\n          scales: {\n            x: {\n              grid: {\n                display: false,\n              },\n              border: {\n                display: false,\n              },\n              ticks: {\n                display: true,\n                font: {\n                  family: \"Dosis, sans-serif\",\n                },\n              },\n              title: {\n                display: false,\n              },\n            },\n            y: {\n              grid: {\n                display: true,\n                color: \"rgba(200, 200, 200, 0.2)\",\n                drawBorder: false,\n                drawTicks: false,\n              },\n              border: {\n                display: false,\n              },\n              ticks: {\n                display: true,\n                font: {\n                  family: \"Dosis, sans-serif\",\n                },\n              },\n              title: {\n                display: false,\n              },\n            },\n          },\n          plugins: {\n            tooltip: {\n              mode: \"index\",\n              intersect: false,\n            },\n            legend: {\n              display: false,\n              position: \"bottom\",\n              align: \"center\",\n              fullWidth: false,\n              reverse: false,\n              labels: {\n                color: \"black\",\n                font: {\n                  size: 12,\n                  style: \"normal\",\n                },\n                padding: 20,\n                boxWidth: 40,\n                usePointStyle: false,\n              },\n            },\n          },\n        },\n        plugins: [\n          {\n            id: \"hoverLine\",\n            beforeDraw: (chart) => {\n              if (chart.tooltip._active && chart.tooltip._active.length) {\n                const activePoint = chart.tooltip._active[0];\n                const { ctx } = chart;\n                const { x } = activePoint.element;\n                const topY = chart.scales.y.top;\n                const bottomY = chart.scales.y.bottom;\n                const gradientStroke = ctx.createLinearGradient(0, topY, 0, bottomY);\n                gradientStroke.addColorStop(0, \"rgba(9, 75, 150, 0)\");\n                gradientStroke.addColorStop(0.5, \"rgb(9, 75, 150)\");\n                gradientStroke.addColorStop(1, \"rgba(9, 75, 150, 0)\");\n                ctx.save();\n                ctx.beginPath();\n                ctx.moveTo(x, topY);\n                ctx.lineTo(x, bottomY);\n                ctx.lineWidth = 2;\n                ctx.strokeStyle = gradientStroke;\n                ctx.stroke();\n                ctx.restore();\n              }\n            },\n          },\n        ],\n      });\n    };\n\n    createChart();\n\n    // Cleanup function\n    return () => {\n      if (chartInstanceRef.current) {\n        chartInstanceRef.current.destroy();\n        chartInstanceRef.current = null;\n      }\n    };\n  }, [mainData, columns, label, uniqueId]);\n\n  return (\n    <ElementContainer className=\"dashitem column\" style={{ height: \"100%\", width: \"100%\" }}>\n      {showTitle && (\n        <Title>\n          <span>{title}</span>\n        </Title>\n      )}\n      <div style={{ height: \"100%\", width: \"100%\" }}>\n        <canvas id={uniqueId} ref={canvasRef} />\n      </div>\n    </ElementContainer>\n  );\n};\n\nexport default LineGraph;","import React, { useState, useEffect, memo, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\nimport { ElementContainer, TabButtons } from \"../../../core/elements\";\nimport { DashBox } from \"../../../core/dashboard/dashbox\";\nimport HighlightCards from \"../../../core/dashboard/highlitecard\";\nimport PopupView from \"../../../core/popupview\";\nimport ListTable from \"../../../core/list/list.js\";\nimport { SubPageHeader } from \"../../../core/input/heading/index.js\";\nimport { getData } from \"../../../../backend/api/index.js\";\nimport PieChart from \"../../../core/dashboard/piechart/index.js\";\nimport LineGraph from \"../../../core/dashboard/linegraph/index.js\";\n\nconst EditButton = styled.span`\n  margin-left: 10px;\n  cursor: pointer;\n  align-self: flex-start;\n  display: flex;\n  align-items: center;\n  padding: 5px 10px;\n  border-radius: 7px;\n  border: 1px solid #ddd;\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: #e0e0e0;\n  }\n`;\n\nconst Dashboard = memo(({ openData }) => {\n  const themeColors = useSelector((state) => state.themeColors);\n  const [data, setData] = useState(openData.data);\n  const [dashboardData, setDashboardData] = useState(null);\n  const [attendanceData, setAttendanceData] = useState(null);\n  const [dashboardLoaded, setDashboardLoaded] = useState(false);\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  useEffect(() => {\n    const getDash = async () => {\n      const dataRes = await getData({ event: data._id }, \"dashboard/dynamic\");\n      if (dataRes.status === 200) {\n        setDashboardData(dataRes.data);\n      }\n    };\n    if (!dashboardLoaded) {\n      setDashboardLoaded(true);\n      getDash();\n    }\n  }, [data._id, dashboardLoaded]);\n  const fetchAttendance = useCallback(\n    async (api, params) => {\n      try {\n        if (!attendanceData) {\n          const dataRes = await getData({ event: data._id }, \"dashboard/attendance\");\n          if (dataRes.status === 200) {\n            setAttendanceData(dataRes.data ?? {});\n          }\n        }\n      } catch (error) {\n        console.error(`Error fetching data from ${api}:`, error);\n        return [];\n      }\n    },\n    [attendanceData, data._id]\n  );\n  const [attributes] = useState([\n    {\n      type: \"checkbox\",\n      placeholder: \"\",\n      name: \"enable\",\n      validation: \"\",\n      default: \"\",\n      label: \"\",\n      tag: true,\n      required: true,\n      view: true,\n      add: true,\n      update: true,\n      inlineAction: true,\n    },\n    {\n      type: \"text\",\n      placeholder: \"Title\",\n      name: \"label\",\n      validation: \"\",\n      default: \"\",\n      label: \"Title\",\n      tag: true,\n      required: true,\n      view: true,\n      add: true,\n      update: true,\n    },\n    {\n      type: \"select\",\n      apiType: \"API\",\n      selectApi: \"graph-type/select\",\n      placeholder: \"Graph Type\",\n      name: \"graphType\",\n      validation: \"\",\n      showItem: \"value\",\n      default: \"\",\n      condition: {\n        item: \"enable\",\n        if: true,\n        then: \"enabled\",\n        else: \"disabled\",\n      },\n      tag: true,\n      label: \"\",\n      required: false,\n      view: true,\n      add: true,\n      update: true,\n      filter: true,\n      search: true,\n      inlineAction: true,\n    },\n  ]);\n\n  useEffect(() => {\n    setData(openData.data);\n  }, [openData.data]);\n\n  const handleEditClick = () => {\n    setIsPopupOpen(true);\n  };\n  const RenderGraph = (key, data, graphType, title, columns) => {\n    switch (graphType) {\n      case \"piechart\":\n        return (\n          <DashBox key={key} column=\"2\">\n            <PieChart dataItem={data} columns={columns} title={title}></PieChart>\n          </DashBox>\n        );\n      case \"linegraph\":\n        return (\n          <DashBox key={key} column=\"2\">\n            <LineGraph dataItem={data} columns={columns} label={\"label\"} title={title}></LineGraph>\n          </DashBox>\n        );\n      case \"comparisonbarchart\":\n        return (\n          <DashBox key={key} column=\"2\">\n            <PieChart dataItem={data} title={title}></PieChart>\n          </DashBox>\n        );\n      case \"comparisonlinechart\":\n        return (\n          <DashBox key={key} column=\"2\">\n            <PieChart dataItem={data} title={title}></PieChart>\n          </DashBox>\n        );\n      case \"levelchart\":\n        return (\n          <DashBox key={key} column=\"2\">\n            <PieChart dataItem={data} title={title}></PieChart>\n          </DashBox>\n        );\n      case \"barchart\":\n        return (\n          <DashBox key={key} column=\"2\">\n            <PieChart dataItem={data} title={title}></PieChart>\n          </DashBox>\n        );\n      case \"mapchart\":\n        return (\n          <DashBox key={key} column=\"2\">\n            <PieChart dataItem={data} title={title}></PieChart>\n          </DashBox>\n        );\n      default:\n        return (\n          <DashBox key={key} column=\"2\">\n            <PieChart dataItem={data} title={title}></PieChart>\n          </DashBox>\n        );\n    }\n  };\n  const [selectedTab, setSelectedTab] = useState(1);\n  return (\n    <ElementContainer className=\"dashboard\">\n      <ElementContainer column=\"1\" className=\"justify full\">\n        <TabButtons\n          selectedTab={selectedTab}\n          selectedChange={(value) => {\n            console.log(\"Cliked Tab\", value);\n            setSelectedTab(value);\n            if (value === 2) {\n              fetchAttendance();\n            }\n          }}\n          tabs={[\n            { key: 1, title: \"Registration\" },\n            { key: 2, title: \"Attendance\" },\n          ]}\n        ></TabButtons>\n        <EditButton onClick={handleEditClick}>\n          <span>Edit</span>\n        </EditButton>\n      </ElementContainer>\n      {selectedTab === 1 ? (\n        <React.Fragment>\n          <DashBox key={1} className=\"full noborder\">\n            <HighlightCards key={\"reg\"} dataType=\"API\" parents={{ event: data._id }} dataItem=\"dashboard\" title=\"Event Registration Overview\" description=\"Overview of event registration details and key statistics.\" />\n          </DashBox>\n          {dashboardData?.defaultData &&\n            dashboardData?.defaultData?.map((item) => {\n              return RenderGraph(item._id, item.graphData, item.graphType?.key ?? \"pie\", item.eventDefaultMetrics.title, item.columns);\n            })}\n          {dashboardData?.formBased &&\n            dashboardData?.formBased?.map((item) => {\n              return RenderGraph(item._id, item.graphData, item.graphType?.key ?? \"pie\", item.ticketFormData.label + \" Distribution\", item.columns);\n            })}\n        </React.Fragment>\n      ) : (\n        <React.Fragment>\n          <DashBox key={2} className=\"full noborder\">\n            <HighlightCards key={\"attendance\"} dataType=\"API\" parents={{ event: data._id }} dataItem=\"dashboard/attendance-count\" title=\"Event Registration Overview\" description=\"Overview of event registration details and key statistics.\" />\n          </DashBox>\n          {attendanceData?.defaultData &&\n            attendanceData?.defaultData?.map((item) => {\n              return RenderGraph(\"attendance\" + item._id, item.graphData, item.graphType?.key ?? \"pie\", item.eventDefaultMetrics.title, item.columns);\n            })}\n          {attendanceData?.formBased &&\n            attendanceData?.formBased?.map((item) => {\n              return RenderGraph(\"attendance\" + item._id, item.graphData, item.graphType?.key ?? \"pie\", item.ticketFormData.label + \" Distribution\", item.columns);\n            })}\n        </React.Fragment>\n      )}\n\n      {isPopupOpen && (\n        <PopupView\n          customClass=\"side\"\n          popupData={\n            <ElementContainer className=\"column popup\">\n              <SubPageHeader line={false} description=\"DEFAULT METRICS\" />\n              <ListTable openPage={false} showHeaderRow={false} add={false} overflow=\"initial\" showFilters={false} showPagination={false} showTitle={false} api=\"ticket-registration/load-default-selection\" parents={{ event: data._id }} itemTitle={{ name: \"name\", type: \"text\", collection: \"exhibitor\" }} shortName=\"Metrics from forms\" formMode=\"single\" viewMode=\"table\" attributes={attributes} />\n              <SubPageHeader line={false} description=\"METRICS FROM FORMS\" />\n              <ListTable openPage={false} showHeaderRow={false} add={false} overflow=\"initial\" showFilters={false} showPagination={false} showTitle={false} api=\"ticket-registration/load-selection\" parents={{ event: data._id }} itemTitle={{ name: \"name\", type: \"text\", collection: \"exhibitor\" }} shortName=\"Metrics from forms\" formMode=\"single\" viewMode=\"table\" attributes={attributes} />\n            </ElementContainer>\n          }\n          themeColors={themeColors}\n          closeModal={() => setIsPopupOpen(false)}\n          itemTitle={{ name: \"title\", type: \"text\", collection: \"\" }}\n          openData={{\n            data: {\n              key: \"print_preparation\",\n              title: \"Edit Dashbord\",\n            },\n          }}\n        />\n      )}\n    </ElementContainer>\n  );\n});\n\nexport default Dashboard;\n"],"names":["DashBox","styled","div","_ref","width","_ref2","column","Tile","appTheme","stroke","soft","TitleBox","TitleHead","span","text","Count","IconWrapper","primary","base","TileContainer","memo","title","description","dataType","filterType","parents","filters","id","value","dataItem","hideFilter","filterItems","setFilterItems","useState","mainData","setMainData","filter","setFilter","dataLoaded","setDataLoaded","fetchData","useCallback","async","api","params","response","getData","status","data","error","console","useEffect","fetchMainData","fetchFilterItems","renderedTiles","useMemo","slice","map","item","index","_jsxs","children","_jsx","GetIcon","icon","count","handleFilterSelect","_item$id","ElementContainer","className","Select","label","align","selectApi","onSelect","prevProps","nextProps","JSON","stringify","colors","type","cutout","columns","chartRef","useRef","current","Array","isArray","tempData","sort","a","b","labels","_item$label","datasets","_item$value","fill","tension","borderRadius","borderSkipped","backgroundColor","key","ctx","getContext","chart","destroy","Chart","options","aspectRatio","plugins","legend","display","position","fullWidth","reverse","color","font","size","style","Title","ref","name","borderColor","showTitle","chartId","canvasRef","chartInstanceRef","uniqueId","Math","random","toString","substr","createChart","gradient","createLinearGradient","rgbMatch","match","length","r","g","addColorStop","cubicInterpolationMode","pointRadius","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","responsive","maintainAspectRatio","interaction","mode","intersect","hover","scales","x","grid","border","ticks","family","y","drawBorder","drawTicks","tooltip","padding","boxWidth","usePointStyle","beforeDraw","_active","activePoint","element","topY","top","bottomY","bottom","gradientStroke","save","beginPath","moveTo","lineTo","lineWidth","strokeStyle","restore","height","EditButton","_dashboardData$defaul","_dashboardData$formBa","_attendanceData$defau","_attendanceData$formB","openData","themeColors","useSelector","state","setData","dashboardData","setDashboardData","attendanceData","setAttendanceData","dashboardLoaded","setDashboardLoaded","isPopupOpen","setIsPopupOpen","dataRes","event","_id","getDash","fetchAttendance","_dataRes$data","attributes","placeholder","validation","default","tag","required","view","add","update","inlineAction","apiType","showItem","condition","if","then","else","search","RenderGraph","graphType","PieChart","LineGraph","selectedTab","setSelectedTab","TabButtons","selectedChange","log","tabs","onClick","handleEditClick","React","HighlightCards","defaultData","_item$graphType$key","_item$graphType","graphData","eventDefaultMetrics","formBased","_item$graphType$key2","_item$graphType2","ticketFormData","_item$graphType$key3","_item$graphType3","_item$graphType$key4","_item$graphType4","PopupView","customClass","popupData","SubPageHeader","line","ListTable","openPage","showHeaderRow","overflow","showFilters","showPagination","itemTitle","collection","shortName","formMode","viewMode","closeModal"],"sourceRoot":""}