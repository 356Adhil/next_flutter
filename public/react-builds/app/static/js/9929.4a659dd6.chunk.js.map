{"version":3,"file":"static/js/9929.4a659dd6.chunk.js","mappings":"oPAQA,MAAMA,EAAgBC,EAAAA,GAAOC,GAAG;;;;;;;;EAU1BC,EAAYF,EAAAA,GAAOC,GAAG;;;;;;;;;;;;EActBE,EAAkBH,EAAAA,GAAOC,GAAG;;;EAK5BG,EAAeJ,EAAAA,GAAOC,GAAG;;;;EAMzBI,EAAML,EAAAA,GAAOM,MAAM;;;;WAIbC,GAAWA,EAAMC,OAAS,UAAY;6BACpBD,GAAWA,EAAMC,OAAS,UAAY;;;;;;;EAS9DC,EAAcT,EAAAA,GAAOC,GAAG;;;;;EAOxBS,EAAgBV,EAAAA,GAAOC,GAAG;;;;;;;;;;;;;;EAgB1BU,EAAoBX,EAAAA,GAAOC,GAAG;;;;EAM9BW,EAAgBZ,EAAAA,GAAOC,GAAG;;;;;;;;;EAW1BY,EAAeb,EAAAA,GAAOC,GAAG;;;;EAMzBa,EAAiBd,EAAAA,GAAOC,GAAG;;;;;;;;;;;EAa3Bc,EAAqB,CACzBC,KAAM,GACNC,KAAM,WACNC,SAAU,GACVC,cAAe,EACfC,YAAa,GACbC,OAAQ,QACRC,aAAc,KACdC,YAAa,GACbC,oBAAqB,GACrBC,gBAAiB,GACjBC,iBAAkB,IA8TpB,EA3T6BC,IAA2B,IAA1B,QAAEC,EAAO,QAAEC,GAASF,EAChD,MAAOG,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,aACpCC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAWC,IAAgBJ,EAAAA,EAAAA,UAAS,KACpCK,EAAWC,IAAgBN,EAAAA,EAAAA,UAAS,KACpCO,EAAUC,IAAeR,EAAAA,EAAAA,UAASjB,IAClC0B,EAAQC,IAAaV,EAAAA,EAAAA,UAAS,CAAC,IAC/BW,EAAeC,IAAoBZ,EAAAA,EAAAA,WAAS,GAE7Ca,EAAcC,EAAAA,aAAmBC,IAC9B,OAAPlB,QAAO,IAAPA,GAAAA,EAAUkB,GACVL,GAAUM,IAAI,IACTA,EACHC,QAASF,KACR,GACF,CAAClB,IAEEqB,EAAiBJ,EAAAA,aAAkBK,UACvC,IAAK,IAADC,EACF,MAAMC,QAAiBC,EAAAA,EAAAA,IAAQ,CAAC,EAAG,YACvB,OAARD,QAAQ,IAARA,GAAc,QAAND,EAARC,EAAUE,YAAI,IAAAH,GAAdA,EAAgBC,UAClBjB,EAAaiB,EAASE,KAAKF,SAE/B,CAAE,MAAOG,GAEP,MADAC,QAAQD,MAAM,4BAA6BA,GACrC,IAAIE,MAAM,4BAClB,IACC,IAEGC,EAAiBb,EAAAA,aAAkBK,UACvC,IAAK,IAADS,EACF,MAAMP,QAAiBC,EAAAA,EAAAA,IAAQ,CAAC,EAAG,sBACvB,OAARD,QAAQ,IAARA,GAAc,QAANO,EAARP,EAAUE,YAAI,IAAAK,GAAdA,EAAgBP,UAClBf,EAAae,EAASE,KAAKF,SAE/B,CAAE,MAAOG,GAEP,MADAC,QAAQD,MAAM,4BAA6BA,GACrC,IAAIE,MAAM,qCAClB,IACC,KAEHG,EAAAA,EAAAA,YAAU,KAgBHlB,GAfcQ,WACjB,IACEjB,GAAW,SACL4B,QAAQC,IAAI,CAChBb,IACAS,MAEFf,GAAiB,EACnB,CAAE,MAAOY,GACPX,EAAYW,EAAMT,SAAW,iCAC/B,CAAC,QACCb,GAAW,EACb,GAIA8B,EACF,GACC,CAACrB,EAAeE,EAAaK,EAAgBS,IAEhD,MAAMM,EAAoBnB,EAAAA,aAAkB,CAACoB,EAAOC,KAClD3B,GAAYQ,IAAI,IACXA,EACH,CAACkB,GAAQC,MAGXzB,GAAUM,IAAI,IACTA,EACH,CAACkB,QAAQE,EACTnB,aAASmB,KACR,GACF,IAEGC,EAAuBvB,EAAAA,aAAmBwB,IAC9C,IAAKA,EAAkBC,OAMrB,YALA/B,GAAYQ,IAAI,IACXA,EACH9B,SAAU,GACVC,cAAe,MAKnB,MAAMqD,EAAsBrC,EAAUsC,MAAKC,GAAKA,EAAEC,MAAQL,EAAkB,KACxEE,GACFhC,GAAYQ,IAAI,IACXA,EACH9B,SAAUoD,EAAkB,GAC5BnD,cAAeqD,EAAoBI,OAAS,KAEhD,GACC,CAACzC,IAEE0C,EAAe/B,EAAAA,aAAkB,KACrC,MAAMgC,EAAY,CAAC,EAcnB,OAZKvC,EAASvB,KAAK+D,SAAQD,EAAU9D,KAAO,6BACvCuB,EAASrB,WAAU4D,EAAU5D,SAAW,6BACxCqB,EAASnB,YAAY2D,SAAQD,EAAU1D,YAAc,+BAExC,WAAdU,IACGS,EAASb,mBAAkBoD,EAAUpD,iBAAmB,iCACxDa,EAAShB,cAAauD,EAAUvD,YAAc,4BAC9CgB,EAASf,sBAAqBsD,EAAUtD,oBAAsB,4BAC9De,EAASd,kBAAiBqD,EAAUrD,gBAAkB,iCAG7DiB,EAAUoC,GAC+B,IAAlCE,OAAOC,KAAKH,GAAWP,MAAY,GACzC,CAAChC,EAAUT,IAERoD,EAAe/B,UAGnB,GAFIgC,GAAGA,EAAEC,iBAEJP,IAKL,IACE3C,GAAW,GACX,MAAMmB,QAAiBgC,EAAAA,EAAAA,IAAS,IAC3B9C,EACHlB,OAAQ,WACP,YAEH,GAAY,OAARgC,QAAQ,IAARA,IAAAA,EAAUE,KAGZ,MAAM,IAAIG,MAAM,gCAFT,OAAP9B,QAAO,IAAPA,GAAAA,EAAUyB,EAASE,KAIvB,CAAE,MAAOC,GAAQ,IAAD8B,EAAAC,EACd9B,QAAQD,MAAM,6BAA8BA,GAC5CX,GAA0B,QAAdyC,EAAA9B,EAAMH,gBAAQ,IAAAiC,GAAM,QAANC,EAAdD,EAAgB/B,YAAI,IAAAgC,OAAN,EAAdA,EAAsBxC,UAAW,4BAC/C,CAAC,QACCb,GAAW,EACb,MArBEW,EAAY,0CAqBd,EA6BF,OAAKF,GAKH6C,EAAAA,EAAAA,MAACzF,EAAa,CAAA0F,SAAA,CACXxD,IACCyD,EAAAA,EAAAA,KAAC5E,EAAc,CAAA2E,UACbC,EAAAA,EAAAA,KAAA,OAAAD,SAAK,qBAITC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CACTC,aAAa,MACbC,MAAM,EACNC,MAAM,qBACN1E,YAAY,oDAGbqB,EAAOQ,UAAWyC,EAAAA,EAAAA,KAAC7E,EAAY,CAAA4E,SAAEhD,EAAOQ,WAEzCuC,EAAAA,EAAAA,MAAA,QAAMO,SAAUb,EAAaO,SAAA,EAC3BD,EAAAA,EAAAA,MAACtF,EAAS,CAAAuF,SAAA,EACRC,EAAAA,EAAAA,KAACM,EAAAA,GAAO,CACNC,MAAM,gBACN9B,MAAO5B,EAASvB,KAChBkF,SAAW/B,GAAUF,EAAkB,OAAQE,GAC/CgC,MAAM,OACNC,KAAK,2DAEN3D,EAAOzB,OAAQ0E,EAAAA,EAAAA,KAAC7E,EAAY,CAAA4E,SAAEhD,EAAOzB,WAGxCwE,EAAAA,EAAAA,MAACtF,EAAS,CAACmG,UAAU,SAAQZ,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACY,EAAAA,GAAW,CACVL,MAAM,mBACN9B,MAAO5B,EAASrB,SAAW,CAACqB,EAASrB,UAAY,GACjDqF,UAAWpE,EAAUqE,KAAI9B,IAAC,CAAO+B,GAAI/B,EAAEC,IAAKR,MAAOO,EAAE1D,SACrD0F,SAAUrC,EACV+B,KAAK,wCACLO,UAAU,EACVnD,MAAOf,EAAOvB,SACdiF,MAAM,YAGVT,EAAAA,EAAAA,KAACvF,EAAe,CAAAsF,UACdD,EAAAA,EAAAA,MAAC9E,EAAa,CAAA+E,SAAA,EACZC,EAAAA,EAAAA,KAAA,OAAKW,UAAU,QAAOZ,SAAC,8BACvBC,EAAAA,EAAAA,KAAA,OAAKW,UAAU,QAAOZ,SAAElD,EAASpB,cAAcyF,4BAKrDpB,EAAAA,EAAAA,MAACpF,EAAY,CAAAqF,SAAA,EACXC,EAAAA,EAAAA,KAACrF,EAAG,CACFG,OAAsB,aAAdsB,EACR+E,QAASA,IAAM9E,EAAa,YAAY0D,SACzC,uBAGDC,EAAAA,EAAAA,KAACrF,EAAG,CACFG,OAAsB,WAAdsB,EACR+E,QAASA,IAAM9E,EAAa,UAAU0D,SACvC,8BAKY,aAAd3D,IACC4D,EAAAA,EAAAA,KAAAoB,EAAAA,SAAA,CAAArB,UACED,EAAAA,EAAAA,MAACtF,EAAS,CAAAuF,SAAA,EACRC,EAAAA,EAAAA,KAAC/E,EAAiB,CAAA8E,UAChBC,EAAAA,EAAAA,KAACqB,EAAAA,EAAW,CAACd,MAAM,uBAErBP,EAAAA,EAAAA,KAACsB,EAAAA,EAAS,CACR7C,MAAO5B,EAASnB,YAChB8E,SAAW/B,GAAUF,EAAkB,cAAeE,KAEvD1B,EAAOrB,cAAesE,EAAAA,EAAAA,KAAC7E,EAAY,CAAA4E,SAAEhD,EAAOrB,gBAR/B,eAaL,WAAdU,IACC0D,EAAAA,EAAAA,MAAC5E,EAAa,CAAA6E,SAAA,EACZC,EAAAA,EAAAA,KAACxF,EAAS,CAAAuF,UACRC,EAAAA,EAAAA,KAACY,EAAAA,GAAW,CACVL,MAAM,4BACN9B,MAAO5B,EAASb,iBAAmB,CAACa,EAASb,kBAAoB,GACjE6E,UAAWlE,EAAUmE,KAAIS,IAAC,CAAOR,GAAIQ,EAAEtC,IAAKR,MAAO8C,EAAEjG,SACrD0F,SAAWQ,GAAajD,EAAkB,mBAAoBiD,EAAS,IAAM,IAC7Ed,KAAK,wCACLO,UAAU,EACVnD,MAAOf,EAAOf,iBACdyE,MAAM,YAGVX,EAAAA,EAAAA,MAACtF,EAAS,CAAAuF,SAAA,EACRC,EAAAA,EAAAA,KAACM,EAAAA,GAAO,CACNC,MAAM,eACN9B,MAAO5B,EAAShB,YAChB2E,SAAW/B,GAAUF,EAAkB,cAAeE,GACtDgC,MAAM,SAEP1D,EAAOlB,cAAemE,EAAAA,EAAAA,KAAC7E,EAAY,CAAA4E,SAAEhD,EAAOlB,kBAE/CiE,EAAAA,EAAAA,MAACtF,EAAS,CAAAuF,SAAA,EACRC,EAAAA,EAAAA,KAACM,EAAAA,GAAO,CACNC,MAAM,wBACN9B,MAAO5B,EAASf,oBAChB0E,SAAW/B,GAAUF,EAAkB,sBAAuBE,GAC9DgC,MAAM,OACNlF,KAAK,aAENwB,EAAOjB,sBAAuBkE,EAAAA,EAAAA,KAAC7E,EAAY,CAAA4E,SAAEhD,EAAOjB,0BAEvDgE,EAAAA,EAAAA,MAACtF,EAAS,CAAAuF,SAAA,EACRC,EAAAA,EAAAA,KAACM,EAAAA,GAAO,CACNC,MAAM,mBACN9B,MAAO5B,EAASd,gBAChByE,SAAW/B,GAAUF,EAAkB,kBAAmBE,GAC1DgC,MAAM,SAEP1D,EAAOhB,kBAAmBiE,EAAAA,EAAAA,KAAC7E,EAAY,CAAA4E,SAAEhD,EAAOhB,yBAKvD+D,EAAAA,EAAAA,MAAC/E,EAAW,CAAAgF,SAAA,EACVC,EAAAA,EAAAA,KAACyB,EAAAA,GAAM,CACLhD,MAAM,gBACNlD,KAAK,YACLmG,WAAYnF,EACZoF,WAhKclE,UACtB,GAAK0B,IAKL,IACE3C,GAAW,GACX,MAAMmB,QAAiBgC,EAAAA,EAAAA,IAAS,IAC3B9C,EACHlB,OAAQ,SACP,YAEH,GAAY,OAARgC,QAAQ,IAARA,IAAAA,EAAUE,KAGZ,MAAM,IAAIG,MAAM,gCAFT,OAAP9B,QAAO,IAAPA,GAAAA,EAAUyB,EAASE,KAIvB,CAAE,MAAOC,GAAQ,IAAD8D,EAAAC,EACd9D,QAAQD,MAAM,sBAAuBA,GACrCX,GAA0B,QAAdyE,EAAA9D,EAAMH,gBAAQ,IAAAiE,GAAM,QAANC,EAAdD,EAAgB/D,YAAI,IAAAgE,OAAN,EAAdA,EAAsBxE,UAAW,uBAC/C,CAAC,QACCb,GAAW,EACb,MArBEW,EAAY,sCAqBd,KA2IM6C,EAAAA,EAAAA,KAACyB,EAAAA,GAAM,CACLhD,MAAM,OACNlD,KAAK,UACLmG,WAAYnF,EACZoF,WAAYnC,cA3IbQ,EAAAA,EAAAA,KAAA,OAAAD,SAAK,wBA+II,C","sources":["components/project/pages/whatsappCampaign/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport EditorNew from \"../../../core/editor\";\nimport CustomLabel from \"../../../core/input/label\";\nimport { MultiSelect, TextBox, Button } from \"../../../core/elements\";\nimport { PageHeader } from \"../../../core/input/heading\";\nimport { getData, postData } from \"../../../../backend/api\";\n\nconst FormContainer = styled.div`\n  max-width: 1200px;\n  padding: 10px;\n  background: white;\n  border-radius: 8px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nconst FormGroup = styled.div`\n  margin-bottom: 20px;\n\n  &.inline {\n    display: flex;\n    gap: 20px;\n    align-items: flex-start;\n\n    > div:first-child {\n      flex: 1;\n    }\n  }\n`;\n\nconst AudienceWrapper = styled.div`\n  min-width: 200px;\n  margin-top: 5px;\n`;\n\nconst TabContainer = styled.div`\n  display: flex;\n  border-bottom: 1px solid #ddd;\n  margin-bottom: 20px;\n`;\n\nconst Tab = styled.button`\n  padding: 10px 20px;\n  border: none;\n  background: none;\n  color: ${(props) => (props.active ? \"#4361ee\" : \"#666\")};\n  border-bottom: 2px solid ${(props) => (props.active ? \"#4361ee\" : \"transparent\")};\n  cursor: pointer;\n  font-weight: 500;\n\n  &:hover {\n    color: #4361ee;\n  }\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  gap: 10px;\n  margin-top: 20px;\n`;\n\nconst AudienceCount = styled.div`\n  padding: 14px 16px;\n\n  .label {\n    font-size: 12px;\n    color: #757575;\n    margin-bottom: 4px;\n  }\n\n  .count {\n    font-size: 20px;\n    font-weight: 600;\n    color: #4361ee;\n  }\n`;\n\nconst DescriptionHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst ConfigSection = styled.div`\n  margin-bottom: 30px;\n\n  h3 {\n    font-size: 16px;\n    font-weight: 500;\n    color: #333;\n    margin-bottom: 20px;\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  color: #dc3545;\n  font-size: 14px;\n  margin-top: 4px;\n`;\n\nconst LoadingOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(255, 255, 255, 0.8);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n`;\n\nconst INITIAL_FORM_STATE = {\n  name: \"\",\n  type: \"whatsapp\",\n  audience: \"\",\n  audienceCount: 0,\n  description: \"\",\n  status: \"draft\",\n  scheduleTime: null,\n  whatsappUrl: \"\",\n  whatsappAccessToken: \"\",\n  whatsappAccount: \"\",\n  whatsappProvider: \"\"\n};\n\nconst WhatsappCampaignForm = ({ onClose, onError }) => {\n  const [activeTab, setActiveTab] = useState(\"template\");\n  const [loading, setLoading] = useState(false);\n  const [audiences, setAudiences] = useState([]);\n  const [providers, setProviders] = useState([]);\n  const [formData, setFormData] = useState(INITIAL_FORM_STATE);\n  const [errors, setErrors] = useState({});\n  const [isInitialized, setIsInitialized] = useState(false);\n\n  const handleError = React.useCallback((message) => {\n    onError?.(message);\n    setErrors(prev => ({\n      ...prev,\n      general: message\n    }));\n  }, [onError]);\n\n  const fetchAudiences = React.useCallback(async () => {\n    try {\n      const response = await getData({}, \"audience\");\n      if (response?.data?.response) {\n        setAudiences(response.data.response); // eslint-disable-line no-param-reassign  \n      }\n    } catch (error) {\n      console.error(\"Error fetching audiences:\", error);\n      throw new Error(\"Failed to fetch audiences\");\n    }\n  }, []);\n\n  const fetchProviders = React.useCallback(async () => {\n    try {\n      const response = await getData({}, \"whatsapp-providers\");\n      if (response?.data?.response) {\n        setProviders(response.data.response);\n      }\n    } catch (error) {\n      console.error(\"Error fetching providers:\", error);\n      throw new Error(\"Failed to fetch WhatsApp providers\");\n    }\n  }, []);\n\n  useEffect(() => {\n    const initialize = async () => {\n      try {\n        setLoading(true);\n        await Promise.all([\n          fetchAudiences(),\n          fetchProviders()\n        ]);\n        setIsInitialized(true);\n      } catch (error) {\n        handleError(error.message || \"Failed to initialize form data\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (!isInitialized) {\n      initialize();\n    }\n  }, [isInitialized, handleError, fetchAudiences, fetchProviders]);\n\n  const handleInputChange = React.useCallback((field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n    \n    setErrors(prev => ({\n      ...prev,\n      [field]: undefined,\n      general: undefined\n    }));\n  }, []);\n\n  const handleAudienceChange = React.useCallback((selectedAudiences) => {\n    if (!selectedAudiences.length) {\n      setFormData(prev => ({\n        ...prev,\n        audience: \"\",\n        audienceCount: 0\n      }));\n      return;\n    }\n\n    const selectedAudienceObj = audiences.find(a => a._id === selectedAudiences[0]);\n    if (selectedAudienceObj) {\n      setFormData(prev => ({\n        ...prev,\n        audience: selectedAudiences[0],\n        audienceCount: selectedAudienceObj.count || 0\n      }));\n    }\n  }, [audiences]);\n\n  const validateForm = React.useCallback(() => {\n    const newErrors = {};\n    \n    if (!formData.name.trim()) newErrors.name = \"Campaign name is required\";\n    if (!formData.audience) newErrors.audience = \"Please select an audience\";\n    if (!formData.description.trim()) newErrors.description = \"Message content is required\";\n\n    if (activeTab === \"config\") {\n      if (!formData.whatsappProvider) newErrors.whatsappProvider = \"WhatsApp provider is required\";\n      if (!formData.whatsappUrl) newErrors.whatsappUrl = \"WhatsApp URL is required\";\n      if (!formData.whatsappAccessToken) newErrors.whatsappAccessToken = \"Access token is required\";\n      if (!formData.whatsappAccount) newErrors.whatsappAccount = \"WhatsApp account is required\";\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  }, [formData, activeTab]);\n\n  const handleSubmit = async (e) => {\n    if (e) e.preventDefault();\n\n    if (!validateForm()) {\n      handleError(\"Please fix all errors before submitting\");\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const response = await postData({\n        ...formData,\n        status: \"sending\"\n      }, \"campaign\");\n      \n      if (response?.data) {\n        onClose?.(response.data);\n      } else {\n        throw new Error(\"Invalid response from server\");\n      }\n    } catch (error) {\n      console.error(\"Error submitting campaign:\", error);\n      handleError(error.response?.data?.message || \"Failed to submit campaign\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSaveDraft = async () => {\n    if (!validateForm()) {\n      handleError(\"Please fix all errors before saving\");\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const response = await postData({\n        ...formData,\n        status: \"draft\"\n      }, \"campaign\");\n      \n      if (response?.data) {\n        onClose?.(response.data);\n      } else {\n        throw new Error(\"Invalid response from server\");\n      }\n    } catch (error) {\n      console.error(\"Error saving draft:\", error);\n      handleError(error.response?.data?.message || \"Failed to save draft\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (!isInitialized) {\n    return <div>Initializing form...</div>;\n  }\n\n  return (\n    <FormContainer>\n      {loading && (\n        <LoadingOverlay>\n          <div>Processing...</div>\n        </LoadingOverlay>\n      )}\n\n      <PageHeader \n        dynamicClass=\"sub\" \n        line={false} \n        title=\"WhatsApp Campaigns\" \n        description=\"Send WhatsApp messages to registered attendees!\"\n      />\n\n      {errors.general && <ErrorMessage>{errors.general}</ErrorMessage>}\n\n      <form onSubmit={handleSubmit}>\n        <FormGroup>\n          <TextBox\n            label=\"Campaign Name\"\n            value={formData.name}\n            onChange={(value) => handleInputChange(\"name\", value)}\n            align=\"left\"\n            info=\"Enter the name of your campaign for internal reference\"\n          />\n          {errors.name && <ErrorMessage>{errors.name}</ErrorMessage>}\n        </FormGroup>\n\n        <FormGroup className=\"inline\">\n          <div>\n            <MultiSelect\n              label=\"Select Audiences\"\n              value={formData.audience ? [formData.audience] : []}\n              selectApi={audiences.map(a => ({ id: a._id, value: a.name }))}\n              onSelect={handleAudienceChange}\n              info=\"Select one audience for your campaign\"\n              checkBox={true}\n              error={errors.audience}\n              align=\"left\"\n            />\n          </div>\n          <AudienceWrapper>\n            <AudienceCount>\n              <div className=\"label\">SELECTED UNIQUE AUDIENCE</div>\n              <div className=\"count\">{formData.audienceCount.toLocaleString()}</div>\n            </AudienceCount>\n          </AudienceWrapper>\n        </FormGroup>\n\n        <TabContainer>\n          <Tab\n            active={activeTab === \"template\"}\n            onClick={() => setActiveTab(\"template\")}\n          >\n            WhatsApp Template\n          </Tab>\n          <Tab\n            active={activeTab === \"config\"}\n            onClick={() => setActiveTab(\"config\")}\n          >\n            WhatsApp Configuration\n          </Tab>\n        </TabContainer>\n\n        {activeTab === \"template\" && (\n          <>\n            <FormGroup key={'tempalate'}>\n              <DescriptionHeader>\n                <CustomLabel label=\"Message Content\" />\n              </DescriptionHeader>\n              <EditorNew\n                value={formData.description}\n                onChange={(value) => handleInputChange(\"description\", value)}\n              />\n              {errors.description && <ErrorMessage>{errors.description}</ErrorMessage>}\n            </FormGroup>\n          </>\n        )}\n\n        {activeTab === \"config\" && (\n          <ConfigSection>\n            <FormGroup>\n              <MultiSelect\n                label=\"WhatsApp Account Provider\"\n                value={formData.whatsappProvider ? [formData.whatsappProvider] : []}\n                selectApi={providers.map(p => ({ id: p._id, value: p.name }))}\n                onSelect={(selected) => handleInputChange(\"whatsappProvider\", selected[0] || \"\")}\n                info=\"Select your WhatsApp service provider\"\n                checkBox={true}\n                error={errors.whatsappProvider}\n                align=\"left\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <TextBox\n                label=\"WhatsApp URL\"\n                value={formData.whatsappUrl}\n                onChange={(value) => handleInputChange(\"whatsappUrl\", value)}\n                align=\"left\"\n              />\n              {errors.whatsappUrl && <ErrorMessage>{errors.whatsappUrl}</ErrorMessage>}\n            </FormGroup>\n            <FormGroup>\n              <TextBox\n                label=\"WhatsApp Access Token\"\n                value={formData.whatsappAccessToken}\n                onChange={(value) => handleInputChange(\"whatsappAccessToken\", value)}\n                align=\"left\"\n                type=\"password\"\n              />\n              {errors.whatsappAccessToken && <ErrorMessage>{errors.whatsappAccessToken}</ErrorMessage>}\n            </FormGroup>\n            <FormGroup>\n              <TextBox\n                label=\"WhatsApp Account\"\n                value={formData.whatsappAccount}\n                onChange={(value) => handleInputChange(\"whatsappAccount\", value)}\n                align=\"left\"\n              />\n              {errors.whatsappAccount && <ErrorMessage>{errors.whatsappAccount}</ErrorMessage>}\n            </FormGroup>\n          </ConfigSection>\n        )}\n\n        <ButtonGroup>\n          <Button\n            value=\"Save as Draft\"\n            type=\"secondary\"\n            isDisabled={loading}\n            ClickEvent={handleSaveDraft}\n          />\n          <Button\n            value=\"Send\"\n            type=\"primary\"\n            isDisabled={loading}\n            ClickEvent={handleSubmit}\n          />\n        </ButtonGroup>\n      </form>\n    </FormContainer>\n  );\n};\n\nexport default WhatsappCampaignForm;"],"names":["FormContainer","styled","div","FormGroup","AudienceWrapper","TabContainer","Tab","button","props","active","ButtonGroup","AudienceCount","DescriptionHeader","ConfigSection","ErrorMessage","LoadingOverlay","INITIAL_FORM_STATE","name","type","audience","audienceCount","description","status","scheduleTime","whatsappUrl","whatsappAccessToken","whatsappAccount","whatsappProvider","_ref","onClose","onError","activeTab","setActiveTab","useState","loading","setLoading","audiences","setAudiences","providers","setProviders","formData","setFormData","errors","setErrors","isInitialized","setIsInitialized","handleError","React","message","prev","general","fetchAudiences","async","_response$data","response","getData","data","error","console","Error","fetchProviders","_response$data2","useEffect","Promise","all","initialize","handleInputChange","field","value","undefined","handleAudienceChange","selectedAudiences","length","selectedAudienceObj","find","a","_id","count","validateForm","newErrors","trim","Object","keys","handleSubmit","e","preventDefault","postData","_error$response","_error$response$data","_jsxs","children","_jsx","PageHeader","dynamicClass","line","title","onSubmit","TextBox","label","onChange","align","info","className","MultiSelect","selectApi","map","id","onSelect","checkBox","toLocaleString","onClick","_Fragment","CustomLabel","EditorNew","p","selected","Button","isDisabled","ClickEvent","_error$response2","_error$response2$data"],"sourceRoot":""}