{"version":3,"file":"static/js/790.3db2e2c0.chunk.js","mappings":"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","sources":["components/project/pages/attendance/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Layout from \"../../../core/layout\";\nimport ListTable from \"../../../core/list/list\";\nimport { Container } from \"../../../core/layout/styels\";\nimport { getData } from \"../../../../backend/api\";\n//src/components/styles/page/index.js\n//if you want to write custom style wirte in above file\nconst Attendance = (props) => {\n  //to update the page title\n  useEffect(() => {\n    document.title = `Attendance - EventHex Portal`;\n  }, []);\n\n  const [attributes] = useState([\n    {\n      type: \"select\",\n      apiType: \"API\",\n      placeholder: \"User\",\n      name: \"user\",\n      showItem: \"name\",\n      validation: \"\",\n      default: \"\",\n      tag: true,\n      label: \"User\",\n      required: false,\n      view: true,\n      add: true,\n      update: true,\n      filter: false,\n    },\n    {\n      type: \"select\",\n      apiType: \"API\",\n      placeholder: \"Email\",\n      name: \"user\",\n      showItem: \"email\",\n      validation: \"\",\n      default: \"\",\n      tag: true,\n      label: \"Email\",\n      required: false,\n      view: true,\n      add: true,\n      update: true,\n      filter: false,\n    },\n    {\n      type: \"select\",\n      apiType: \"API\",\n      placeholder: \"Mobile Number\",\n      name: \"user\",\n      showItem: \"mobileNumber\",\n      validation: \"\",\n      default: \"\",\n      tag: true,\n      label: \"Mobile Number\",\n      required: false,\n      view: true,\n      add: true,\n      update: true,\n      filter: false,\n    },\n    {\n      type: \"select\",\n      apiType: \"API\",\n      placeholder: \"Whatsapp Number\",\n      name: \"user\",\n      showItem: \"whatsapp\",\n      validation: \"\",\n      default: \"\",\n      tag: true,\n      label: \"Whatsapp Number\",\n      required: false,\n      view: true,\n      add: true,\n      update: true,\n      filter: false,\n    },\n    {\n      type: \"select\",\n      apiType: \"API\",\n      placeholder: \"Palce\",\n      name: \"user\",\n      showItem: \"place\",\n      validation: \"\",\n      default: \"\",\n      tag: true,\n      label: \"Place\",\n      required: false,\n      view: true,\n      add: true,\n      update: true,\n      filter: false,\n    },\n    {\n      type: \"select\",\n      apiType: \"API\",\n      placeholder: \"District\",\n      name: \"user\",\n      showItem: \"district\",\n      validation: \"\",\n      default: \"\",\n      tag: true,\n      label: \"District\",\n      required: false,\n      view: true,\n      add: true,\n      update: true,\n      filter: false,\n    },\n    {\n      type: \"select\",\n      apiType: \"API\",\n      placeholder: \"Institution\",\n      name: \"user\",\n      showItem: \"institution\",\n      validation: \"\",\n      default: \"\",\n      tag: true,\n      label: \"Institution\",\n      required: false,\n      view: true,\n      add: true,\n      update: true,\n      filter: false,\n    },\n    {\n      type: \"date\",\n      placeholder: \"Date\",\n      name: \"date\",\n      validation: \"\",\n      default: \"\",\n      label: \"Date\",\n      tag: true,\n      required: true,\n      view: true,\n      add: true,\n      update: true,\n    },\n  ]);\n\n  const [actions] = useState([\n    {\n      element: \"button\",\n      type: \"callback\",\n      callback: (item, data, refreshView) => {\n        // Set the data for the clicked item and open the SetupMenu popup\n        console.log(data);\n        // setUserId(data._id)\n        getApproved(data._id, refreshView);\n      },\n      itemTitle: {\n        name: \"user\",\n        type: \"text\",\n        collection: \"\",\n      },\n      icon: \"checked\",\n      title: \"Approve\",\n      params: {\n        api: ``,\n        parentReference: \"\",\n        itemTitle: {\n          name: \"user\",\n          type: \"text\",\n          collection: \"\",\n        },\n        shortName: \"Approve\",\n        addPrivilege: true,\n        delPrivilege: true,\n        updatePrivilege: true,\n        customClass: \"medium\",\n      },\n    },\n  ]);\n\n  const getApproved = (userId, refreshView) => {\n    props.setLoaderBox(true);\n    getData({ userId }, \"approved\")\n      .then((response) => {\n        props.setLoaderBox(false);\n        console.log(response);\n        if (response.data) {\n          props.setMessage({ content: response.data.message });\n          refreshView();\n        } else {\n          // Handle the case where response.data is undefined\n          console.error(\"Response data is undefined.\");\n        }\n      })\n      .catch((error) => {\n        props.setLoaderBox(false);\n        // Handle any errors that occur during the API request\n        console.error(\"API request error:\", error);\n      });\n  };\n\n  return (\n    <Container className=\"noshadow\">\n      <ListTable\n        actions={actions}\n        api={`attendance`}\n        itemTitle={{ name: \"name\", type: \"text\", collection: \"user\" }}\n        shortName={`Attendance`}\n        formMode={`single`}\n        {...props}\n        attributes={attributes}\n      ></ListTable>\n    </Container>\n  );\n};\n// exporting the page with parent container layout..\nexport default Layout(Attendance);\n"],"names":["Layout","props","useEffect","document","title","attributes","useState","type","apiType","placeholder","name","showItem","validation","default","tag","label","required","view","add","update","filter","actions","element","callback","item","data","refreshView","console","log","getApproved","_id","itemTitle","collection","icon","params","api","parentReference","shortName","addPrivilege","delPrivilege","updatePrivilege","customClass","userId","setLoaderBox","getData","then","response","setMessage","content","message","error","catch","_jsx","Container","className","children","ListTable","formMode"],"sourceRoot":""}