{"version":3,"file":"static/js/433.5a638c93.chunk.js","mappings":"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","sources":["components/project/pages/settings/elements/supPage/index.js","components/project/pages/settings/elements/customForm/index.js","components/project/pages/settings/elements/list/index.js","components/project/pages/settings/elements/listitem/index.js","components/project/pages/settings/elements/tablist/index.js","components/project/pages/settings/elements/index.js"],"sourcesContent":["import { useState } from \"react\";\nimport { Button, ElementContainer, Info, Switch, TabButtons, Title } from \"../../../../../core/elements\";\nexport const Tab1 = (props) => {\n  const [tabs] = useState([\n    { key: 1, title: \"Message Box Samples\", icon: \"user\" },\n    { key: 2, title: \"Tab Button 2\" },\n  ]);\n  const [selectedTab, setSelectedTab] = useState(1);\n  const [switchStatus, setSwitchStatus] = useState(false);\n  const { setMessage, setLoaderBox } = props;\n  return (\n    <ElementContainer className=\"column\">\n      <ElementContainer>\n        <TabButtons\n          selectedTab={selectedTab}\n          selectedChange={(value) => {\n            //how to use loader it will be only available when of thread or long running function is running!\n            setLoaderBox(true);\n            console.log(\"Cliked Tab\", value);\n            //turn off loader when it end the use\n            setSelectedTab(value);\n            setLoaderBox(false);\n          }}\n          tabs={tabs}\n        ></TabButtons>\n        <Switch title=\"Expand\" switchChange={(value) => setSwitchStatus(value)} switchValue={switchStatus}></Switch>\n      </ElementContainer>\n      {/* <div>Tab button {selectedTab} selected</div> */}\n      {selectedTab === 1 && (\n        <ElementContainer className=\"column\">\n          <Title title=\"Message Box Samples, You can use this as Title!\"></Title>\n          <Info content=\"Click below button to see confirm message box!\"></Info>\n          <Button\n            ClickEvent={() => {\n              setMessage({\n                type: 2,\n                content: \"Did you see the confirm box?\",\n                proceed: \"Yes, I saw\",\n                okay: \"No, I didn't see\",\n                onClose: async () => {\n                  try {\n                    setMessage({\n                      type: 1,\n                      content: \"No, You are lying! 🤣\",\n                      okay: \"Hmm\",\n                    });\n                    //return false if this second message to show..\n                    return false;\n                  } catch (error) {}\n                },\n                onProceed: async () => {\n                  try {\n                    setMessage({\n                      type: 1,\n                      content: \"Thank you for confirming!\",\n                      okay: \"Welcome\",\n                    });\n                    //return false if this second message to show..\n                    return false;\n                  } catch (error) {}\n                },\n                data: { id: 1 },\n              });\n            }}\n            icon={\"next\"}\n            value=\"Click me to See Confrim Box\"\n          ></Button>\n          <Info content=\"Click below button to see alert message box!\"></Info>\n          <Button\n            icon={\"next\"}\n            ClickEvent={() => {\n              setMessage({\n                type: 1,\n                content: \"You have asked to show the alert!\",\n                okay: \"Yes, Am I\",\n              });\n            }}\n            value=\"Click me to See Alert Box\"\n          ></Button>\n        </ElementContainer>\n      )}\n      {selectedTab === 2 && (\n        <ElementContainer>\n          <Title title=\"You can use this as Title!\"></Title>\n        </ElementContainer>\n      )}\n    </ElementContainer>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { Button, Checkbox, Date, DateTime, ElementContainer, MultiSelect, Select, TextArea, TextBox, Time, Title } from \"../../../../../core/elements\";\nexport const Tab2 = () => {\n  const [textData, setTextData] = useState(\"\");\n  const [textarea, setTextArea] = useState(\"\");\n  const [datetime, setDatetime] = useState(\"\");\n  const [time, setTime] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [checked, setChecked] = useState(false);\n  const [textDataError, setTextDataError] = useState(\"\");\n  const [textAreaError, setAreaError] = useState(\"\");\n  const [dateDataError, setDateDataError] = useState(\"\");\n  const [timeDataError, setTimeDataError] = useState(\"\");\n  const [dateTimeDataError, setDateTimeDataError] = useState(\"\");\n  const [selectDataError, setSelectDataError] = useState(\"\");\n  const [select, setSelect] = useState(\"\");\n  const [multiSelectDataError, setMultiSelectDataError] = useState(\"\");\n  const [multiSelect, setMultiSelect] = useState([]);\n  const [disabledSubmit, setDisabledSubmit] = useState(true);\n\n  useEffect(() => {\n    const isTextDataValid = textData.trim().length > 0;\n    const isTextareaValid = textarea.trim().length > 0;\n    const isDatetimeValid = datetime.trim().length > 0;\n    const isTimeValid = time.trim().length > 0;\n    const isDateValid = date.trim().length > 0;\n    const isSelectValid = select.trim().length > 0;\n    const isMultiSelectValid = multiSelect.length > 0;\n\n    setTextDataError(isTextDataValid ? \"\" : \"There should be a valid text!!\");\n    setAreaError(isTextareaValid ? \"\" : \"There should be a valid text!!\");\n    setDateTimeDataError(isDatetimeValid ? \"\" : \"There should be a valid text!!\");\n    setTimeDataError(isTimeValid ? \"\" : \"There should be a valid text!!\");\n    setDateDataError(isDateValid ? \"\" : \"There should be a valid text!!\");\n    setSelectDataError(isSelectValid ? \"\" : \"There should be a valid text!!\");\n    setMultiSelectDataError(isMultiSelectValid ? \"\" : \"There should be valid items!!\");\n    setDisabledSubmit(!(isMultiSelectValid && isSelectValid && isTextDataValid && isTextareaValid && isDatetimeValid && isTimeValid && isDateValid));\n  }, [textData, textarea, datetime, time, date, select, multiSelect]);\n\n  return (\n    <ElementContainer className=\"column\">\n      <Title title=\"Custom Form\"></Title>\n      <TextBox\n        label=\"Text Box Sample\"\n        value={textData}\n        error={textDataError}\n        info=\"<bold>In</bold> publishing and graphic design, Lorem ipsum is a placeholder text commonly<br><br> <i>A used to demonstrate the visual</i> form of a document or a typeface without relying on meaningful content. Lorem ipsum may be used as a placeholder before the final copy is available.\"\n        onChange={(value) => {\n          console.log(\"Text Changed\", value);\n          setTextData(value);\n        }}\n      ></TextBox>\n      <TextArea\n        label=\"Text Area Sample\"\n        value={textarea}\n        error={textAreaError}\n        info=\"<bold>In</bold> publishing and graphic design, Lorem ipsum is a placeholder text commonly<br><br> <i>A used to demonstrate the visual</i> form of a document or a typeface without relying on meaningful content. Lorem ipsum may be used as a placeholder before the final copy is available.\"\n        onChange={(value) => {\n          console.log(\"Text Changed\", value);\n          setTextArea(value);\n        }}\n      ></TextArea>\n      <Select\n        align={\"form\"}\n        error={selectDataError}\n        radioButton={true}\n        label=\"Single Select Sample\"\n        value={select}\n        selectApi={[\n          { id: \"1\", value: \"Item 1\" },\n          { id: \"2\", value: \"Item 2\" },\n          { id: \"3\", value: \"Item 3\" },\n        ]}\n        info=\"<bold>In</bold> publishing and graphic design, Lorem ipsum is a placeholder text commonly<br><br> <i>A used to demonstrate the visual</i> form of a document or a typeface without relying on meaningful content. Lorem ipsum may be used as a placeholder before the final copy is available.\"\n        onSelect={(item) => {\n          console.log(\"Selected Value\", select, item);\n          setSelect(item.id ?? null);\n        }}\n      ></Select>\n       <Select\n        align={\"form\"}\n        error={selectDataError}\n        label=\"Single Select Sample\"\n        value={select}\n        selectApi={[\n          { id: \"1\", value: \"Item 1\" },\n          { id: \"2\", value: \"Item 2\" },\n          { id: \"3\", value: \"Item 3\" },\n        ]}\n        info=\"<bold>In</bold> publishing and graphic design, Lorem ipsum is a placeholder text commonly<br><br> <i>A used to demonstrate the visual</i> form of a document or a typeface without relying on meaningful content. Lorem ipsum may be used as a placeholder before the final copy is available.\"\n        onSelect={(item) => {\n          console.log(\"Selected Value\", select, item);\n          setSelect(item.id ?? null);\n        }}\n      ></Select>\n      <MultiSelect\n        align={\"form\"}\n        error={multiSelectDataError}\n        checkBox={true}\n        label=\"Multi Select Sample\"\n        value={multiSelect}\n        selectApi={[\n          { id: \"1\", value: \"Item 1\" },\n          { id: \"2\", value: \"Item 2\" },\n          { id: \"3\", value: \"Item 3\" },\n        ]}\n        info=\"<bold>In</bold> publishing and graphic design, Lorem ipsum is a placeholder text commonly<br><br> <i>A used to demonstrate the visual</i> form of a document or a typeface without relying on meaningful content. Lorem ipsum may be used as a placeholder before the final copy is available.\"\n        onSelect={(item) => {\n          console.log(\"Multi Selected Value\", item);\n          setMultiSelect(item);\n        }}\n      ></MultiSelect>\n      <DateTime\n        label=\"Date Time Sample\"\n        value={datetime}\n        error={dateTimeDataError}\n        info=\"<bold>In</bold> publishing and graphic design, Lorem ipsum is a placeholder text commonly<br><br> <i>A used to demonstrate the visual</i> form of a document or a typeface without relying on meaningful content. Lorem ipsum may be used as a placeholder before the final copy is available.\"\n        onChange={(value) => {\n          console.log(\"Text Changed\", value);\n          setDatetime(value);\n        }}\n      ></DateTime>\n      <Time\n        label=\"Time Sample\"\n        value={time}\n        error={timeDataError}\n        info=\"<bold>In</bold> publishing and graphic design, Lorem ipsum is a placeholder text commonly<br><br> <i>A used to demonstrate the visual</i> form of a document or a typeface without relying on meaningful content. Lorem ipsum may be used as a placeholder before the final copy is available.\"\n        onChange={(value) => {\n          console.log(\"Text Changed\", value);\n          setTime(value);\n        }}\n      ></Time>\n      <Date\n        label=\"Date Sample\"\n        value={date}\n        error={dateDataError}\n        info=\"<bold>In</bold> publishing and graphic design, Lorem ipsum is a placeholder text commonly<br><br> <i>A used to demonstrate the visual</i> form of a document or a typeface without relying on meaningful content. Lorem ipsum may be used as a placeholder before the final copy is available.\"\n        onChange={(value) => {\n          console.log(\"Text Changed\", value);\n          setDate(value);\n        }}\n      ></Date>\n      <Checkbox\n        label=\"Check Box Sample\"\n        value={checked}\n        error={dateDataError}\n        info=\"<bold>In</bold> publishing and graphic design, Lorem ipsum is a placeholder text commonly<br><br> <i>A used to demonstrate the visual</i> form of a document or a typeface without relying on meaningful content. Lorem ipsum may be used as a placeholder before the final copy is available.\"\n        onChange={(value) => {\n          console.log(\"Text Changed\", value);\n          setChecked(value);\n        }}\n      ></Checkbox>\n      <Button\n        isDisabled={disabledSubmit}\n        align=\"right\"\n        icon={\"checked\"}\n        ClickEvent={() => {\n          console.log(\"Clicked Primary Button\");\n        }}\n        value=\"Save\"\n      ></Button>\n    </ElementContainer>\n  );\n};\n","import { useState } from \"react\";\nimport { ElementContainer } from \"../../../../../core/elements\";\nimport ListTable from \"../../../../../core/list/list\";\nexport const Tab3 = (props) => {\n  const [attributes] = useState([\n    {\n      type: \"text\",\n      placeholder: \"Page Title\",\n      name: \"pageTitle\",\n      validation: \"\",\n      default: \"\",\n      tag: true,\n      label: \"Page Title\",\n      required: true,\n      view: true,\n      add: true,\n      update: true,\n    },\n    {\n      type: \"text\",\n      placeholder: \"Meta\",\n      name: \"meta\",\n      validation: \"\",\n      default: \"\",\n      tag: true,\n      label: \"Meta\",\n      required: true,\n      view: true,\n      add: true,\n      update: true,\n    },\n    {\n      type: \"textarea\",\n      placeholder: \"Page Content\",\n      name: \"pageContent\",\n      validation: \"\",\n      default: \"\",\n      tag: true,\n      label: \"Page Content\",\n      required: true,\n      view: true,\n      add: true,\n      update: true,\n    },\n    {\n      type: \"text\",\n      placeholder: \"Slug\",\n      name: \"slug\",\n      validation: \"\",\n      default: \"\",\n      tag: true,\n      label: \"Slug\",\n      required: true,\n      view: true,\n      add: true,\n      update: true,\n    },\n  ]);\n  return (\n    <ElementContainer className=\"column\">\n      <ListTable\n        // Actions to be displayed in the ListTable\n        // actions={actions}\n        // API endpoint for fetching menu data\n        api={`page`}\n        // Property name for the title of each menu item\n        // itemTitle={`label`}\n        // Short name or label for the menu\n        itemTitle={{\n          name: \"pageTitle\",\n          type: \"text\",\n          collection: \"\",\n        }}\n        shortName={`Page Settings`}\n        formMode={`double`}\n        // Privilege flag indicating whether the user can add menu items\n        {...props}\n        // Additional attributes related to the menu\n        attributes={attributes}\n      ></ListTable>\n    </ElementContainer>\n  );\n};\n","import { useState } from \"react\";\nimport { ElementContainer } from \"../../../../../core/elements\";\nimport ListTable from \"../../../../../core/list/list\";\nexport const Tab4 = (props) => {\n  const [attributes] = useState([\n    {\n      type: \"text\",\n      placeholder: \"Page Title\",\n      name: \"pageTitle\",\n      validation: \"\",\n      default: \"\",\n      tag: true,\n      label: \"Page Title\",\n      required: true,\n      view: true,\n      add: true,\n      update: true,\n    },\n    {\n      type: \"text\",\n      placeholder: \"Meta\",\n      name: \"meta\",\n      validation: \"\",\n      default: \"\",\n      tag: true,\n      label: \"Meta\",\n      required: true,\n      view: true,\n      add: true,\n      update: true,\n    },\n    {\n      type: \"textarea\",\n      placeholder: \"Page Content\",\n      name: \"pageContent\",\n      validation: \"\",\n      default: \"\",\n      tag: true,\n      label: \"Page Content\",\n      required: true,\n      view: true,\n      add: true,\n      update: true,\n    },\n    {\n      type: \"text\",\n      placeholder: \"Slug\",\n      name: \"slug\",\n      validation: \"\",\n      default: \"\",\n      tag: true,\n      label: \"Slug\",\n      required: true,\n      view: true,\n      add: true,\n      update: true,\n    },\n  ]);\n  return (\n    <ElementContainer className=\"column\">\n      <ListTable\n        // Actions to be displayed in the ListTable\n        // actions={actions}\n        // API endpoint for fetching menu data\n        api={`page`}\n        // Property name for the title of each menu item\n        // itemTitle={`label`}\n        // Short name or label for the menu\n        itemTitle={{\n          name: \"pageTitle\",\n          type: \"text\",\n          collection: \"\",\n        }}\n        shortName={`Page Settings`}\n        formMode={`double`}\n        viewMode=\"single\"\n        // Privilege flag indicating whether the user can add menu items\n        {...props}\n        // Additional attributes related to the menu\n        attributes={attributes}\n      ></ListTable>\n    </ElementContainer>\n  );\n};\n","import { useState } from \"react\";\nimport { ElementContainer, ListTabs } from \"../../../../../core/elements\";\nexport const Tab5 = (props) => {\n  const [attributes] = useState([\n    {\n      type: \"text\",\n      placeholder: \"Page Title\",\n      name: \"pageTitle\",\n      validation: \"\",\n      default: \"\",\n      tag: true,\n      label: \"Page Title\",\n      required: true,\n      view: true,\n      add: true,\n      update: true,\n    },\n    {\n      type: \"text\",\n      placeholder: \"Meta\",\n      name: \"meta\",\n      validation: \"\",\n      default: \"\",\n      tag: true,\n      label: \"Meta\",\n      required: true,\n      view: true,\n      add: true,\n      update: true,\n    },\n    {\n      type: \"textarea\",\n      placeholder: \"Page Content\",\n      name: \"pageContent\",\n      validation: \"\",\n      default: \"\",\n      tag: true,\n      label: \"Page Content\",\n      required: true,\n      view: true,\n      add: true,\n      update: true,\n    },\n    {\n      type: \"text\",\n      placeholder: \"Slug\",\n      name: \"slug\",\n      validation: \"\",\n      default: \"\",\n      tag: true,\n      label: \"Slug\",\n      required: true,\n      view: true,\n      add: true,\n      update: true,\n    },\n  ]);\n  const [actions] = useState([\n    {\n      element: \"button\",\n      type: \"subItem\",\n      id: \"user/subscriber/web\",\n      itemTitle: {\n        name: \"username\",\n        type: \"text\",\n        collection: \"user\",\n      },\n      title: \"Medical Record\",\n      attributes: attributes,\n      params: {\n        api: `user/subscriber/web`,\n        parentReference: \"user\",\n        itemTitle: {\n          name: \"username\",\n          type: \"text\",\n          collection: \"user\",\n        },\n        shortName: \"Medical Record\",\n        addPrivilege: true,\n        delPrivilege: true,\n        updatePrivilege: true,\n        //if you want to show edit button for passed previlges then make value for condtion is 'true' or you dont want to give edit option for the pased previlges then 'false'\n        customClass: \"medium\",\n        formMode: \"double\",\n      },\n    },\n    {\n      element: \"button\",\n      type: \"subList\",\n      id: \"user/subscriber/web\",\n      itemTitle: {\n        name: \"username\",\n        type: \"text\",\n        collection: \"user\",\n      },\n      title: \"Medical Records\",\n      attributes: attributes,\n      params: {\n        api: `user/subscriber/web`,\n        parentReference: \"user\",\n        itemTitle: {\n          name: \"username\",\n          type: \"text\",\n          collection: \"user\",\n        },\n        shortName: \"Medical Record\",\n        addPrivilege: true,\n        delPrivilege: true,\n        updatePrivilege: true,\n        //if you want to show edit button for passed previlges then make value for condtion is 'true' or you dont want to give edit option for the pased previlges then 'false'\n        customClass: \"medium\",\n        formMode: \"double\",\n      },\n    },\n  ]);\n\n  return (\n    <ElementContainer className=\"column\">\n      <ListTabs actions={actions} titleValue={\"Users\"} setLoaderBox={props.setLoaderBox} setMessage={props.setMessage}></ListTabs>\n    </ElementContainer>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport Layout from \"../../../../core/layout\";\nimport {\n  Button,\n  ElementParentContainer,\n  ElementContainer,\n  IconButton,\n  MultiTabs,\n  Select,\n  TabButtons,\n  Switch,\n  Checkbox,\n} from \"../../../../core/elements\";\nimport { Tab1 } from \"./supPage\";\nimport { Tab2 } from \"./customForm\";\nimport AutoForm from \"../../../../core/autoform/AutoForm\";\nimport { Tab3 } from \"./list\";\nimport { Tab4 } from \"./listitem\";\nimport { Tab5 } from \"./tablist\";\nimport FormInput from \"../../../../core/input\";\n\n//if you want to write custom style wirte in above file\n\nconst Elements = (props) => {\n  //to update the page title\n  useEffect(() => {\n    document.title = `Elements - EventHex Portal`;\n  }, []);\n  const [select, setSelect] = useState(\"\");\n  const [selectedTab, setSelectedTab] = useState(1);\n  const [switchStatus, setSwitchStatus] = useState(true);\n  const [checked, setChecked] = useState(true);\n\n  // form related\n  const [parameters, setParameters] = useState(null);\n  const [isOpen, setIsOpen] = useState(null);\n  const closeEdit = () => {\n    setIsOpen(null);\n  };\n  return (\n    <ElementParentContainer className=\"column\">\n      <ElementContainer>\n        <FormInput\n          type=\"widges\"\n          value={\"Close\"}\n          icon={\"add\"}\n          // onChange={submitChange}\n        />\n\n        <Button\n          icon={\"add\"}\n          ClickEvent={() => {\n            console.log(\"Clicked Primary Button\");\n          }}\n          value=\"Primary Button\"\n        ></Button>\n        <Button\n          icon={\"add\"}\n          ClickEvent={() => {\n            console.log(\"Clicked Secondary Button\");\n          }}\n          value=\"Secondary Button\"\n          type=\"secondary\"\n        ></Button>\n        <Select\n          label=\"Select an Item\"\n          value={select}\n          selectApi={[\n            { id: \"1\", value: \"Item 1\" },\n            { id: \"2\", value: \"Item 2\" },\n            { id: \"3\", value: \"Item 3\" },\n          ]}\n          onSelect={(item) => {\n            console.log(\"Selected Value\", select, item);\n            setSelect(item.id ?? null);\n          }}\n        ></Select>\n        <Checkbox\n          label=\"Check Box Sample\"\n          value={checked}\n          onChange={(value) => {\n            console.log(\"Text Changed\", value);\n            setChecked(value);\n          }}\n        ></Checkbox>\n        <TabButtons\n          selectedTab={selectedTab}\n          selectedChange={(value) => {\n            console.log(\"Cliked Tab\", value);\n            setSelectedTab(value);\n          }}\n          tabs={[\n            { key: 1, title: \"Day\" },\n            { key: 2, title: \"Week\" },\n          ]}\n        ></TabButtons>\n        <Switch\n          title={\"Show Tabs\"}\n          align=\"right\"\n          switchChange={(value) => setSwitchStatus(value)}\n          switchValue={switchStatus}\n        ></Switch>\n        <IconButton\n          icon=\"add\"\n          ClickEvent={() => {\n            const data = { _id: 1, title: \"\", description: \"\" };\n            console.log(\"Cliked Icon Button\");\n            setParameters([\n              {\n                type: \"text\",\n                placeholder: \"Title\",\n                name: \"title\",\n                showItem: \"\",\n                validation: \"\",\n                default: data.title ?? \"\", //add exisitng data if needed\n                label: \"title\",\n                required: true,\n                view: true,\n                add: true,\n                update: true,\n              },\n              {\n                type: \"textarea\",\n                placeholder: \"Description\",\n                name: \"description\",\n                showItem: \"\",\n                validation: \"\",\n                default: data.description ?? \"\", //add exisitng data if needed\n                label: \"description\",\n                required: true,\n                view: true,\n                add: true,\n                update: true,\n              },\n              {\n                type: \"multiSelect\",\n                placeholder: \"Select Days of Week \",\n                listView: true,\n                name: \"eligibleDays\",\n                validation: \"\",\n                default: [0, 1, 2, 3, 4, 5, 6],\n                label: \"Select Days of Week \",\n                required: true,\n                view: true,\n                customClass: \"list\",\n                add: true,\n                update: true,\n                apiType: \"JSON\",\n                search: false,\n                selectApi: [\n                  { value: \"Sunday\", id: 0 },\n                  { value: \"Monday\", id: 1 },\n                  { value: \"Tuesday\", id: 2 },\n                  { value: \"Wednesday\", id: 3 },\n                  { value: \"Thursday\", id: 4 },\n                  { value: \"Friday\", id: 5 },\n                  { value: \"Saturday\", id: 6 },\n                ],\n              },\n              {\n                type: \"multiSelect\",\n                placeholder: \"Select Days of Week \",\n                listView: true,\n                checkboxDesign: true,\n                name: \"eligibleDaysRadio\",\n                validation: \"\",\n                default: [0, 1, 2, 3, 4, 5, 6],\n                label: \"Select Days of Week \",\n                required: true,\n                view: true,\n                customClass: \"list\",\n                add: true,\n                update: true,\n                apiType: \"JSON\",\n                search: false,\n                selectApi: [\n                  { value: \"Sunday\", id: 0 },\n                  { value: \"Monday\", id: 1 },\n                  { value: \"Tuesday\", id: 2 },\n                  { value: \"Wednesday\", id: 3 },\n                  { value: \"Thursday\", id: 4 },\n                  { value: \"Friday\", id: 5 },\n                  { value: \"Saturday\", id: 6 },\n                ],\n              },\n              {\n                type: \"select\",\n                placeholder: \"Select Days of Week \",\n                listView: true,\n                radioButton: true,\n                name: \"eligibleDaysCheckbox\",\n                validation: \"\",\n                default: \"\",\n                label: \"Select Days of Week \",\n                required: true,\n                view: true,\n                customClass: \"list\",\n                add: true,\n                update: true,\n                apiType: \"JSON\",\n                search: false,\n                selectApi: [\n                  { value: \"Sunday\", id: 0 },\n                  { value: \"Monday\", id: 1 },\n                  { value: \"Tuesday\", id: 2 },\n                  { value: \"Wednesday\", id: 3 },\n                  { value: \"Thursday\", id: 4 },\n                  { value: \"Friday\", id: 5 },\n                  { value: \"Saturday\", id: 6 },\n                ],\n              },\n              {\n                type: \"hidden\",\n                placeholder: \"_id\",\n                name: \"_id\",\n                showItem: \"\",\n                validation: \"\",\n                default: data._id, //add exisitng data if needed\n                label: \"_id\",\n                required: true,\n                view: true,\n                add: false,\n                update: true,\n              },\n            ]);\n            setIsOpen({\n              submitHandler: (post) => {\n                console.log(post);\n              },\n              submit: \"Save Now\",\n              api: \"mock/update\",\n              header: \"Add Sample Data\",\n              description: \"\",\n            });\n          }}\n        ></IconButton>\n      </ElementContainer>\n      {switchStatus && (\n        <MultiTabs\n          tabs={[\n            {\n              name: `a-unique-name-for-tab-1`,\n              title: \"Tab Button Examples\",\n              element: <Tab1 {...props} />,\n              icon: \"user\",\n            },\n            {\n              name: `a-unique-name-for-tab-2`,\n              title: \"Form Elements\",\n              element: <Tab2 {...props} />,\n              icon: \"user\",\n            },\n            {\n              name: `a-unique-name-for-tab-3`,\n              title: \"List Data\",\n              element: <Tab3 {...props} />,\n              icon: \"user\",\n            },\n            {\n              name: `a-unique-name-for-tab-4`,\n              title: \"List Item\",\n              element: <Tab4 {...props} />,\n            },\n            {\n              name: `a-unique-name-for-tab-5`,\n              title: \"Tab List Automation\",\n              element: <Tab5 {...props} />,\n            },\n          ]}\n        ></MultiTabs>\n      )}\n      {isOpen && (\n        <AutoForm\n          useCaptcha={isOpen.useCaptcha}\n          useCheckbox={false}\n          customClass={isOpen.customClass ?? \"\"}\n          description={isOpen.description}\n          formValues={{}}\n          formMode={isOpen.customClass ?? \"double\"}\n          key={isOpen.header}\n          formType={\"post\"}\n          header={isOpen.header}\n          formInput={parameters}\n          submitHandler={isOpen.submitHandler}\n          button={isOpen.submit}\n          isOpenHandler={(value) => {\n            closeEdit(value);\n          }}\n          isOpen={true}\n          plainForm={false}\n        ></AutoForm>\n      )}\n    </ElementParentContainer>\n  );\n};\n\n// exporting the page with parent container layout..\nexport default Layout(Elements);\n"],"names":["Tab1","props","tabs","useState","key","title","icon","selectedTab","setSelectedTab","switchStatus","setSwitchStatus","setMessage","setLoaderBox","_jsxs","ElementContainer","className","children","_jsx","TabButtons","selectedChange","value","console","log","Switch","switchChange","switchValue","Title","Info","content","Button","ClickEvent","type","proceed","okay","onClose","async","error","onProceed","data","id","Tab2","textData","setTextData","textarea","setTextArea","datetime","setDatetime","time","setTime","date","setDate","checked","setChecked","textDataError","setTextDataError","textAreaError","setAreaError","dateDataError","setDateDataError","timeDataError","setTimeDataError","dateTimeDataError","setDateTimeDataError","selectDataError","setSelectDataError","select","setSelect","multiSelectDataError","setMultiSelectDataError","multiSelect","setMultiSelect","disabledSubmit","setDisabledSubmit","useEffect","isTextDataValid","trim","length","isTextareaValid","isDatetimeValid","isTimeValid","isDateValid","isSelectValid","isMultiSelectValid","TextBox","label","info","onChange","TextArea","Select","align","radioButton","selectApi","onSelect","item","_item$id","_item$id2","MultiSelect","checkBox","DateTime","Time","Date","Checkbox","isDisabled","Tab3","attributes","placeholder","name","validation","default","tag","required","view","add","update","ListTable","api","itemTitle","collection","shortName","formMode","Tab4","viewMode","Tab5","actions","element","params","parentReference","addPrivilege","delPrivilege","updatePrivilege","customClass","ListTabs","titleValue","Layout","_isOpen$customClass","_isOpen$customClass2","document","parameters","setParameters","isOpen","setIsOpen","ElementParentContainer","FormInput","IconButton","_data$title","_data$description","showItem","listView","apiType","search","checkboxDesign","submitHandler","post","submit","header","description","MultiTabs","AutoForm","useCaptcha","useCheckbox","formValues","formType","formInput","button","isOpenHandler","plainForm"],"sourceRoot":""}